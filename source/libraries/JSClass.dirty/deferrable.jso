JS.Deferrable=new JS.Module("Deferrable",{extend:{Timeout:new JS.Class(Error)},callback:function(a,b){if(this.__deferredStatus__==="success")return a.apply(b||null,this.__deferredValue__);if(this.__deferredStatus__==="failure")return;this.__callbacks__=this.__callbacks__||[],this.__callbacks__.push([a,b||null])},errback:function(a,b){if(this.__deferredStatus__==="failure")return a.apply(b||null,this.__deferredValue__);if(this.__deferredStatus__==="success")return;this.__errbacks__=this.__errbacks__||[],this.__errbacks__.push([a,b||null])},timeout:function(a){this.cancelTimeout();var b=this,c=new JS.Deferrable.Timeout;this.__timeout__=JS.ENV.setTimeout(function(){b.fail(c)},a)},cancelTimeout:function(){if(!this.__timeout__)return;JS.ENV.clearTimeout(this.__timeout__),delete this.__timeout__},setDeferredStatus:function(a,b){this.__deferredStatus__=a,this.__deferredValue__=b,this.cancelTimeout();switch(a){case"success":if(!this.__callbacks__)return;var c;while(c=this.__callbacks__.pop())c[0].apply(c[1],b);break;case"failure":if(!this.__errbacks__)return;var d;while(d=this.__errbacks__.pop())d[0].apply(d[1],b)}},succeed:function(){return this.setDeferredStatus("success",arguments)},fail:function(){return this.setDeferredStatus("failure",arguments)}});