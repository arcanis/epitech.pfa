JS.TSort=new JS.Module("TSort",{extend:{Cyclic:new JS.Class(Error)},tsort:function(){var a=[];return this.tsortEach(a.push,a),a},tsortEach:function(a,b){this.eachStronglyConnectedComponent(function(d){if(d.length===1)a.call(b||null,d[0]);else throw new JS.TSort.Cyclic("topological sort failed: "+d.toString())})},stronglyConnectedComponents:function(){var a=[];return this.eachStronglyConnectedComponent(a.push,a),a},eachStronglyConnectedComponent:function(a,b){var c=new JS.Hash,d=[];this.tsortEachNode(function(f){if(c.hasKey(f))return;this.eachStronglyConnectedComponentFrom(f,c,d,function(c){a.call(b||null,c)})},this)},eachStronglyConnectedComponentFrom:function(a,b,c,d,e){var f=b.size,g=c.length,h=f,i,j;b.store(a,f),c.push(a),this.tsortEachChild(a,function(a){if(b.hasKey(a)){var f=b.get(a);a!==undefined&&f<h&&(h=f)}else{var g=this.eachStronglyConnectedComponentFrom(a,b,c,d,e);g<h&&(h=g)}},this);if(f===h){i=c.splice(g,c.length-g),j=i.length;while(j--)b.store(i[j],undefined);d.call(e||null,i)}return h},tsortEachNode:function(){throw new JS.NotImplementedError("tsortEachNode")},tsortEachChild:function(){throw new JS.NotImplementedError("tsortEachChild")}});